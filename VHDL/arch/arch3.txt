LSU1:

IN:
Opcode 4 bits x4
fct 2 bits x4

regw 6 bits
vregw 6 bits

regsrc1 64 bits
regsrc2 128 bits

reg1 64 bits
reg2 64 bits

OUT:
regw 6 bits 
vregw 6 bits 


;--------
addr = reg1+reg2

Si on est en Load alors regw ou vregw est la destination
Si on est en Write alors regsrc1 ou regsrc2 est la source

Si on est en mode cache alors on envoie au MMU l'addr (faudra docn codér le MMU pour gerer la partie "retour")
Le cache est un set associatif 2 ways
il y'a aussi un ligne de cache (en fully associatif) pour le uncached accelered (il ne fait que la lecture , donc il n y a pas d'écriture en RAM en cas de cache miss)

LSU2:
pareil sauf qu'il n'a pas de cache comme target, seulement le SPM-D en lecture/écriture

SPM-D:

IN:
DMA_DATA  64 bits x2
DMA_ADDR 16 bits
DMA_SIGNAL 2 bits (lecture/écriture DMA/rien faire)


LSU1_SIGNAL 2 bits (lecture/écriture DMA/rien faire)
LSU1_ADDR 16 bits
DATA1 128 bits

LSU1_SIGNAL 2 bits (lecture/écriture DMA/rien faire)
LSU1_ADDR 16 bits
DATA1 128 bits

OUT:
DATA1 128 bits
DATA2 128 bits


